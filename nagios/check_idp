#!/bin/bash

#title          check_idp
#description    Use Shibboleht IDP Status page to generate statistics
#author         Rui Ribeiro - rui.ribeiro@cafe.rnp.br
#date           2018/06/06
#version        1.0
#changelog      1.0 - 2018/06/06 - Initial version

#Centreon exit codes
#0 - ok
#1 - warning
#2 - critical
#3 - unknow

IDPSTATUSURL="$1"
MODE="$2"
IDPSTATUSURLOUT="/tmp/idp-monitoramento-out.$$"
RET=""

function getStatusPage {

    curl -k -s -i ${IDPSTATUSURL} > ${IDPSTATUSURLOUT}
    RET=`grep "HTTP/1.1" ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    if [ "${RET}" != "200" ] ; then
        echo "ERRO - Falha ao acessar ${IDPSTATUSURL}"
        rm -rf ${IDPSTATUSURLOUT}
        exit 2
    fi
}

function getIdpLastMetadataUpdate {

    getStatusPage
    RET=`grep -A3 ShibbolethMetadata ${IDPSTATUSURLOUT} | grep update | awk '{ print $3 }'`
    echo "OK - Ultima atualizacao de metadado em ${RET}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getIdpStatus {

    getStatusPage
    RET=`grep "HTTP/1.1" ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    if [ "${RET}" = "200" ] ; then
        echo "OK - O IDP estÃ¡ operacional"
    fi
    rm -rf ${IDPSTATUSURLOUT}

}

function getIdpUptime {

    getStatusPage
    RET=`grep uptime ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETDAYS=`expr ${RET} / 86400000`
    echo "OK - Uptime do IDP: ${RETDAYS} dia(s) (${RET} ms)|uptime=${RET}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getIdpVersion {

    getStatusPage
    RET=`grep idp_version ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    echo "OK - Versao do IDP: ${RET}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getJdkVersion {

    getStatusPage
    RET=`grep jdk_version ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    echo "OK - Versao do JDK: ${RET}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getOsCores {

    getStatusPage
    RET=`grep available_cores ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    echo "OK - Cores disponiveis: ${RET}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getOsKernelVersion {

    getStatusPage
    RET=`grep operating_system_version ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    echo "OK - Versao do Kernel: ${RET}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getOsMemoryMax {

    getStatusPage
    RET=`grep maximum_memory ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    echo "OK - Memoria total: ${RET} MB"
    rm -rf ${IDPSTATUSURLOUT}

}

function getOsMemoryUsed {

    getStatusPage
    RET=`grep used_memory ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    echo "OK - Memoria utilizada: ${RET} MB"
    rm -rf ${IDPSTATUSURLOUT}

}

function getAll {

    getIdpStatus
    getOsCores
    getOsKernelVersion
    getOsMemoryMax
    getOsMemoryUsed
    getJdkVersion
    getIdpVersion
    getIdpUptime
    getIdpLastMetadataUpdate

}

function getAllCompact {

    getStatusPage
    RETIDPSTATUS=`grep "HTTP/1.1" ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETOSCORES=`grep available_cores ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETOSKERNELVERSION=`grep operating_system_version ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETOSMEMORYMAX=`grep maximum_memory ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETOSMEMORYUSED=`grep used_memory ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETJDKVERSION=`grep jdk_version ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETIDPVERSION=`grep idp_version ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETIDPUPTIME=`grep uptime ${IDPSTATUSURLOUT} | awk '{ print $2 }'`
    RETIDPUPTIMEDAYS=`expr ${RETIDPUPTIME} / 86400000`
    RETIDPLASTMETADATAUPDATE=`grep -A3 ShibbolethMetadata ${IDPSTATUSURLOUT} | grep update | awk '{ print $3 }'`
    echo "OK - O IDP esta operacional; Cores disponiveis: ${RETOSCORES}; VersÃ£o do Kernel: ${RETOSKERNELVERSION}; Memoria total: ${RETOSMEMORYMAX} MB; Memoria utilizada: ${RETOSMEMORYUSED} MB; Versao do JDK: ${RETJDKVERSION}; VersÃ£o do IDP: ${RETIDPVERSION}; Uptime do IDP: ${RETIDPUPTIMEDAYS} dia(s) (${RETIDPUPTIME} ms); ultima atualizacao de metadado em ${RETIDPLASTMETADATAUPDATE}"
    rm -rf ${IDPSTATUSURLOUT}

}

function getHelp {

    echo ""
    echo "USO: idp-monitoramento.sh UrlDaPaginaDeStatus Opcao"
    echo "     Exemplo: idp-monitoramento.sh https://login.ufrgs.br/idp/status all"
    echo ""
    echo "Opcoes disponiveis"
    echo ""
    echo "  all - todas as opcoes"
    echo "  allcompact - todas as opcoes em uma unica linha"
    echo "  idplastmetadata - Ultima atualizacao dos arquivos de metadados"
    echo "  idpstatus - status do IDP"
    echo "  idpuptime - tempo transcorrido desde a inicializacao do IDP"
    echo "  idpversion - versao do IDP"
    echo "  jdkversion - versao do JDK"
    echo "  oskernelversion - versao do kernel do sistema operacional"
    echo "  oscores - numero de cores disponiveis no servidor"
    echo "  osmemorymax - total de memoria do servidor"
    echo "  osmemoryused - total de memoria em uso no servidor"
    echo ""

}

function invalidOption {

    echo ""
    echo "ERRO - opcao e/ou sintaxe invalida!"
    getHelp
    exit 3

}

if [ "${IDPSTATUSURL}" = "help" ] ; then

    getHelp
    exit 0

fi

case ${MODE} in
    all)
        getAll ;;
    allcompact)
        getAllCompact ;;
    help)
        getHelp ;;
    idplastmetadata)
        getIdpLastMetadataUpdate ;;
    idpstatus)
        getIdpStatus ;;
    idpuptime)
        getIdpUptime ;;
    idpversion)
        getIdpVersion ;;
    jdkversion)
        getJdkVersion ;;
    oskernelversion)
        getOsKernelVersion ;;
    oscores)
        getOsCores ;;
    osmemorymax)
        getOsMemoryMax ;;
    osmemoryused)
        getOsMemoryUsed ;;
    *)
        invalidOption ;;
esac

exit 0